
This file lists modules PyInstaller was not able to find. This does not
necessarily mean this module is required for running your program. Python and
Python 3rd-party packages include a lot of conditional or optional modules. For
example the module 'ntpath' only exists on Windows, whereas the module
'posixpath' only exists on Posix systems.

Types if import:
* top-level: imported at the top-level - look at these first
* conditional: imported within an if-statement
* delayed: imported within a function
* optional: imported within a try-except-statement

IMPORTANT: Do NOT post this list to the issue-tracker. Use it as a basis for
            tracking down the missing module yourself. Thanks!

missing module named grp - imported by shutil (delayed, optional), tarfile (optional), pathlib._local (optional), subprocess (delayed, conditional, optional)
missing module named pwd - imported by posixpath (delayed, conditional, optional), shutil (delayed, optional), tarfile (optional), pathlib._local (optional), subprocess (delayed, conditional, optional), netrc (delayed, conditional), getpass (delayed, optional), psutil (optional)
missing module named _frozen_importlib_external - imported by importlib._bootstrap (delayed), importlib (optional), importlib.abc (optional)
excluded module named _frozen_importlib - imported by importlib (optional), importlib.abc (optional)
missing module named 'collections.abc' - imported by traceback (top-level), inspect (top-level), logging (top-level), typing (top-level), selectors (top-level), tracemalloc (top-level), http.client (top-level)
missing module named posix - imported by os (conditional, optional), posixpath (optional), shutil (conditional), importlib._bootstrap_external (conditional)
missing module named resource - imported by posix (top-level)
missing module named _suggestions - imported by traceback (delayed, optional)
missing module named windows_curses - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (optional)
missing module named _curses - imported by curses (top-level), curses.has_key (top-level)
missing module named termios - imported by getpass (optional), psutil._compat (delayed, optional), tty (top-level), F:\Tars-Utilities-Tool\tarsutilitiestool.py (optional)
missing module named _posixsubprocess - imported by subprocess (conditional)
missing module named fcntl - imported by subprocess (optional), psutil._compat (delayed, optional)
missing module named elevate - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.columns' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.box' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.style' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.align' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.layout' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.prompt' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.text' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.panel' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.live' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.table' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named 'rich.progress' - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named rich - imported by F:\Tars-Utilities-Tool\tarsutilitiestool.py (top-level)
missing module named dummy_threading - imported by psutil._compat (optional)
missing module named vms_lib - imported by platform (delayed, optional)
missing module named 'java.lang' - imported by platform (delayed, optional)
missing module named java - imported by platform (delayed)
missing module named _scproxy - imported by urllib.request (conditional)
